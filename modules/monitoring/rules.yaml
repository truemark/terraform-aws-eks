groups:
- name: KubestateExporter
  rules:
    - alert: KubernetesNodeNotReady
      expr: 'kube_node_status_condition{condition="Ready",status="true"} == 0'
      for: 10m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes node not ready (instance {{ $labels.instance }})
        description: "Node {{ $labels.node }} has been unready for a long time  VALUE = {{ $value }}"

    - alert: KubernetesMemoryPressure
      expr: 'kube_node_status_condition{condition="MemoryPressure",status="true"} == 1'
      for: 2m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes memory pressure (instance {{ $labels.instance }})
        description: "{{ $labels.node }} has MemoryPressure condition  VALUE = {{ $value }}"

    - alert: KubernetesDiskPressure
      expr: 'kube_node_status_condition{condition="DiskPressure",status="true"} == 1'
      for: 2m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes disk pressure (instance {{ $labels.instance }})
        description: "{{ $labels.node }} has DiskPressure condition  VALUE = {{ $value }}"

    - alert: KubernetesNetworkUnavailable
      expr: 'kube_node_status_condition{condition="NetworkUnavailable",status="true"} == 1'
      for: 2m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes network unavailable (instance {{ $labels.instance }})
        description: "{{ $labels.node }} has NetworkUnavailable condition  VALUE = {{ $value }}"

    - alert: KubernetesOutOfCapacity
      expr: 'sum by (node) ((kube_pod_status_phase{phase="Running"} == 1) + on(uid) group_left(node) (0 * kube_pod_info{pod_template_hash=""})) / sum by (node) (kube_node_status_allocatable{resource="pods"}) * 100 > 90'
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes out of capacity (instance {{ $labels.instance }})
        description: "{{ $labels.node }} is out of capacity VALUE = {{ $value }}"

    - alert: KubernetesContainerOomKiller
      expr: '(kube_pod_container_status_restarts_total{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} - kube_pod_container_status_restarts_total{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled", %{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }}[10m]) == 1'
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes container oom killer (instance {{ $labels.instance }})
        description: "Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes."

    - alert: KubernetesJobFailed
      expr: 'kube_job_status_failed{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} > 0'
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes Job failed (instance {{ $labels.instance }})
        description: "Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete VALUE = {{ $value }}"

    - alert: KubernetesCronjobSuspended
      expr: 'kube_cronjob_spec_suspend{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} != 0'
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes CronJob suspended (instance {{ $labels.instance }})
        description: "CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is suspended VALUE = {{ $value }}"

    - alert: KubernetesPersistentvolumeclaimPending
      expr: 'kube_persistentvolumeclaim_status_phase{phase="Pending"} == 1'
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes PersistentVolumeClaim pending (instance {{ $labels.instance }})
        description: "PersistentVolumeClaim {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending VALUE = {{ $value }}"

    - alert: KubernetesVolumeOutOfDiskSpace
      expr: 'kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes * 100 < 10'
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes Volume out of disk space (instance {{ $labels.instance }})
        description: "Volume is almost full (< 10% left) VALUE = {{ $value }}"

    - alert: KubernetesVolumeFullInFourDays
      expr: 'predict_linear(kubelet_volume_stats_available_bytes[6h], 4 * 24 * 3600) < 0'
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes Volume full in four days (instance {{ $labels.instance }})
        description: "{{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is expected to fill up within four days. Currently {{ $value | humanize }}% is available. VALUE = {{ $value }}"

    - alert: KubernetesPersistentvolumeError
      expr: 'kube_persistentvolume_status_phase{phase=~"Failed|Pending", job="kube-state-metrics"} > 0'
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes PersistentVolume error (instance {{ $labels.instance }})
        description: "Persistent volume is in bad state VALUE = {{ $value }}"

    - alert: KubernetesStatefulsetDown
      expr: 'kube_statefulset_replicas{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} != kube_statefulset_status_replicas_ready{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} > 0'
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes StatefulSet down (instance {{ $labels.instance }})
        description: "A StatefulSet went down VALUE = {{ $value }}"

    - alert: KubernetesHpaScalingAbility
      expr: 'kube_horizontalpodautoscaler_status_condition{status="false", condition="AbleToScale", %{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} == 1'
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes HPA scaling ability (instance {{ $labels.instance }})
        description: "Pod is unable to scale VALUE = {{ $value }}"

    - alert: KubernetesHpaMetricAvailability
      expr: 'kube_horizontalpodautoscaler_status_condition{status="false", condition="ScalingActive", %{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} == 1'
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes HPA metric availability (instance {{ $labels.instance }})
        description: "HPA is not able to collect metrics VALUE = {{ $value }}"

    - alert: KubernetesHpaScaleCapability
      expr: 'kube_horizontalpodautoscaler_status_desired_replicas{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} >= kube_horizontalpodautoscaler_spec_max_replicas{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }}'
      for: 2m
      labels:
        severity: info
      annotations:
        summary: Kubernetes HPA scale capability (instance {{ $labels.instance }})
        description: "The maximum number of desired Pods has been hit VALUE = {{ $value }}"

    - alert: KubernetesHpaUnderutilized
      expr: 'max(quantile_over_time(0.5, kube_horizontalpodautoscaler_status_desired_replicas{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }}[1d]) == kube_horizontalpodautoscaler_spec_min_replicas) by (horizontalpodautoscaler) > 3'
      for: 0m
      labels:
        severity: info
      annotations:
        summary: Kubernetes HPA underutilized (instance {{ $labels.instance }})
        description: "HPA is constantly at minimum replicas for 50% of the time. Potential cost saving here. VALUE = {{ $value }}"

    - alert: KubernetesPodNotHealthy
      expr: 'sum by (namespace, pod) (kube_pod_status_phase{phase=~"Pending|Unknown|Failed", %{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }}) > 0'
      for: 15m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes Pod not healthy (instance {{ $labels.instance }})
        description: "Pod has been in a non-ready state for longer than 15 minutes. VALUE = {{ $value }}"

    - alert: KubernetesPodCrashLooping
      expr: 'increase(kube_pod_container_status_restarts_total{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }}[1m]) > 3'
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes pod crash looping (instance {{ $labels.instance }})
        description: "Pod {{ $labels.pod }} is crash looping VALUE = {{ $value }}"

    - alert: KubernetesReplicassetMismatch
      expr: 'kube_replicaset_spec_replicas{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} != kube_replicaset_status_ready_replicas{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }}'
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes ReplicasSet mismatch (instance {{ $labels.instance }})
        description: "Deployment Replicas mismatch VALUE = {{ $value }}"

    - alert: KubernetesDeploymentReplicasMismatch
      expr: 'kube_deployment_spec_replicas{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} != kube_deployment_status_replicas_available{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }}'
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes Deployment replicas mismatch (instance {{ $labels.instance }})
        description: "Deployment Replicas mismatch VALUE = {{ $value }}"

    - alert: KubernetesStatefulsetReplicasMismatch
      expr: 'kube_statefulset_status_replicas_ready{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} != kube_statefulset_status_replicas{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }}'
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes StatefulSet replicas mismatch (instance {{ $labels.instance }})
        description: "A StatefulSet does not match the expected number of replicas. VALUE = {{ $value }}"

    - alert: KubernetesDeploymentGenerationMismatch
      expr: 'kube_deployment_status_observed_generation{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} != kube_deployment_metadata_generation{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }}'
      for: 10m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes Deployment generation mismatch (instance {{ $labels.instance }})
        description: "A Deployment has failed but has not been rolled back. VALUE = {{ $value }}"

    - alert: KubernetesStatefulsetGenerationMismatch
      expr: 'kube_statefulset_status_observed_generation{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} != kube_statefulset_metadata_generation{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }}'
      for: 10m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes StatefulSet generation mismatch (instance {{ $labels.instance }})
        description: "A StatefulSet has failed but has not been rolled back. VALUE = {{ $value }}"

    - alert: KubernetesStatefulsetUpdateNotRolledOut
      expr: 'max without (revision) (kube_statefulset_status_current_revision{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} unless kube_statefulset_status_update_revision{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }}) * (kube_statefulset_replicas{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} != kube_statefulset_status_replicas_updated{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }})'
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes StatefulSet update not rolled out (instance {{ $labels.instance }})
        description: "StatefulSet update has not been rolled out. VALUE = {{ $value }}"

    - alert: KubernetesDaemonsetRolloutStuck
      expr: 'kube_daemonset_status_number_ready{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} / kube_daemonset_status_desired_number_scheduled{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} * 100 < 100 or kube_daemonset_status_desired_number_scheduled{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} - kube_daemonset_status_current_number_scheduled{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} > 0'
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes DaemonSet rollout stuck (instance {{ $labels.instance }})
        description: "Some Pods of DaemonSet are not scheduled or not ready VALUE = {{ $value }}"

    - alert: KubernetesDaemonsetMisscheduled
      expr: 'kube_daemonset_status_number_misscheduled > 0'
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes DaemonSet misscheduled (instance {{ $labels.instance }})
        description: "Some DaemonSet Pods are running where they are not supposed to run VALUE = {{ $value }}"

    - alert: KubernetesCronjobTooLong
      expr: 'time() - kube_cronjob_next_schedule_time{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} > 3600'
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes CronJob too long (instance {{ $labels.instance }})
        description: "CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is taking more than 1h to complete. VALUE = {{ $value }}"

    - alert: KubernetesJobSlowCompletion
      expr: 'kube_job_spec_completions{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} - kube_job_status_succeeded{%{ if amp_alerting_rules_exclude_namespace != "" }${amp_alerting_rules_exclude_namespace}%{ endif }} > 0'
      for: 12h
      labels:
        severity: critical
      annotations:
        summary: Kubernetes job slow completion (instance {{ $labels.instance }})
        description: "Kubernetes Job {{ $labels.namespace }}/{{ $labels.job_name }} did not complete in time. VALUE = {{ $value }}"

    - alert: KubernetesApiServerErrors
      expr: 'sum(rate(apiserver_request_total{job="apiserver",code=~"^(?:5..)$"}[1m])) / sum(rate(apiserver_request_total{job="apiserver"}[1m])) * 100 > 3'
      for: 2m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes API server errors (instance {{ $labels.instance }})
        description: "Kubernetes API server is experiencing high error rate VALUE = {{ $value }}"

    - alert: KubernetesApiClientErrors
      expr: '(sum(rate(rest_client_requests_total{code=~"(4|5).."}[1m])) by (instance, job) / sum(rate(rest_client_requests_total[1m])) by (instance, job)) * 100 > 1'
      for: 2m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes API client errors (instance {{ $labels.instance }})
        description: "Kubernetes API client is experiencing high error rate VALUE = {{ $value }}"

    - alert: KubernetesClientCertificateExpiresNextWeek
      expr: 'apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 7*24*60*60'
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes client certificate expires next week (instance {{ $labels.instance }})
        description: "A client certificate used to authenticate to the apiserver is expiring next week. VALUE = {{ $value }}"

    - alert: KubernetesClientCertificateExpiresSoon
      expr: 'apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 24*60*60'
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Kubernetes client certificate expires soon (instance {{ $labels.instance }})
        description: "A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours. VALUE = {{ $value }}"

    - alert: KubernetesApiServerLatency
      expr: 'histogram_quantile(0.99, sum(rate(apiserver_request_latencies_bucket{subresource!="log",verb!~"^(?:CONNECT|WATCHLIST|WATCH|PROXY)$"} [10m])) WITHOUT (instance, resource)) / 1e+06 > 1'
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes API server latency (instance {{ $labels.instance }})
        description: "Kubernetes API server has a 99th percentile latency of {{ $value }} seconds for {{ $labels.verb }} {{ $labels.resource }}. VALUE = {{ $value }}"

    - alert: AbsentInClusterPrometheus
      expr: 'absent(prometheus_ready)'
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: In-cluster prometheus is unavailable
        description: "In-cluster prometheus server is unavailable, metrics from the cluster is not getting scrapped"

    - alert: ClusterWorkerNodesDropping
      expr: 'count(kube_node_info) * 0.90 > count(kube_node_info offset 5m)'
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: Cluster worker nodes drop by 10% in 5 minutes
        description: "The amount of cluster worker nodes has dropped by 10 percent in the last 5 minutes. VALUE = {{ $value }}"
- name: KarpenterNodepoolAlerts
  rules:
  - alert: KarpenterNodepoolUsageHigh
    expr: |
      (
        (
          sum by (nodepool, resource_type) (karpenter_nodepool_usage)
          /
          sum by (nodepool, resource_type) (karpenter_nodepool_limit)
        ) * 100
      ) > 85
      and
      (
        (
          (
            sum by (nodepool, resource_type) (karpenter_nodepool_usage)
            - sum by (nodepool, resource_type) (karpenter_nodepool_usage offset 10m)
          )
          /
          sum by (nodepool, resource_type) (karpenter_nodepool_usage offset 10m)
        ) * 100
      ) > 20
    for: 10m
    labels:
      severity: critical
    annotations:
      summary: "Karpenter nodepool usage is high"
      description: "The usage of karpenter nodepool {{ $labels.nodepool }} for resource type {{ $labels.resource_type }} has grown by more than 20% in the last 10 minutes and is currently above 85%."
