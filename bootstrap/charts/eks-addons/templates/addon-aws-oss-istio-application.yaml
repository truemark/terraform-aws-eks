{{- if and (.Values.istio) (.Values.istio.base.enabled) }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: addons-istio-base
  namespace: {{ .Values.argocdNamespace | default "argocd" }}
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocdProject | default "default" }}
  sources:
    - repoURL: https://istio-release.storage.googleapis.com/charts
      targetRevision: {{ .Values.istio.chartVersion }}
      chart: base
      helm:
        releaseName: {{ .Values.istio.base.name }}
        ignoreMissingValueFiles: true
        values: |
          defaultRevision: default
  destination:
    namespace: '{{ .Values.istio.base.namespace }}'
    name: '{{ .Values.clusterName }}'
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
      - "CreateNamespace=true"
      - "Validate=false"
      - "PrunePropagationPolicy=Foreground"
      - "PruneLast=true"
      - "RespectIgnoreDifferences=false"
{{- end }}
---
{{- if and (.Values.istio) (.Values.istio.istiod.enabled) }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: addons-istio-discovery
  namespace: {{ .Values.argocdNamespace | default "argocd" }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocdProject | default "default" }}
  sources:
    - repoURL: '{{ .Values.addons_repo_url }}'
      targetRevision: '{{ .Values.addons_repo_revision }}'
      ref: values
    - repoURL: '{{ .Values.addons_repo_url }}'
      targetRevision: '{{ .Values.addons_repo_revision }}'
      path: bootstrap/addons/istio/envoy_filters
    - repoURL: https://istio-release.storage.googleapis.com/charts
      targetRevision: {{ .Values.istio.chartVersion }}
      chart: istiod
      helm:
        releaseName: {{ .Values.istio.istiod.name }}
        ignoreMissingValueFiles: true
        valuesObject:
          global:
            {{- if .Values.istio.base.meshId }}
            meshID: {{ .Values.istio.base.meshId }}
            {{- end }}
            {{- if .Values.istio.base.network }}
            network: {{ .Values.istio.base.network }}
            {{- end }}
            {{- if .Values.istio.base.multiCluster }}
            multiCluster:
              enabled: {{ .Values.istio.base.multiCluster.enabled }}
              clusterName: {{ .Values.istio.base.multiCluster.clusterName }}
            {{- end }}
          meshConfig:
            defaultConfig:
              holdApplicationUntilProxyStarts: true
              gatewayTopology:
                numTrustedProxies: 1
            enablePrometheusMerge: true
            accessLogEncoding: JSON
            accessLogFile: /dev/stdout
            accessLogFormat: |
              {
                "protocol": "%PROTOCOL%",
                "upstream_service_time": "%REQ(x-envoy-upstream-service-time)%",
                "upstream_local_address": "%UPSTREAM_LOCAL_ADDRESS%",
                "duration": "%DURATION%",
                "upstream_transport_failure_reason": "%UPSTREAM_TRANSPORT_FAILURE_REASON%",
                "route_name": "%ROUTE_NAME%",
                "downstream_local_address": "%DOWNSTREAM_LOCAL_ADDRESS%",
                "user_agent": "%REQ(USER-AGENT)%",
                "response_code": "%RESPONSE_CODE%",
                "response_flags": "%RESPONSE_FLAGS%",
                "start_time": "%START_TIME%",
                "method": "%REQ(:METHOD)%",
                "request_id": "%REQ(X-REQUEST-ID)%",
                "upstream_host": "%UPSTREAM_HOST%",
                "x_forwarded_for": "%REQ(X-FORWARDED-FOR)%",
                "client_ip": "%REQ(X-Envoy-External-Address)%",
                "requested_server_name": "%REQUESTED_SERVER_NAME%",
                "bytes_received": "%BYTES_RECEIVED%",
                "bytes_sent": "%BYTES_SENT%",
                "upstream_cluster": "%UPSTREAM_CLUSTER%",
                "downstream_remote_address": "%DOWNSTREAM_REMOTE_ADDRESS%",
                "authority": "%REQ(:AUTHORITY)%",
                "path": "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%",
                "response_code_details": "%RESPONSE_CODE_DETAILS%"
              }
          nodeSelector:
            {{- if .Values.istio.base.nodeSelector }}
            {{- toYaml .Values.istio.base.nodeSelector | nindent 12 }}
            {{- else }}
            CriticalAddonsOnly: true
            {{- end }}
          tolerations:
            {{- if .Values.istio.base.tolerations }}
            {{- toYaml .Values.istio.base.tolerations | nindent 12 }}
            {{- else }}
            - key: "CriticalAddonsOnly"
              operator: "Exists"
              effect: "NoSchedule"
            {{- end }}
  destination:
    namespace: '{{ .Values.istio.base.namespace }}'
    name: '{{ .Values.clusterName }}'
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
      - "CreateNamespace=true"
      - "Validate=false"
      - "PrunePropagationPolicy=Foreground"
      - "PruneLast=true"
      - "RespectIgnoreDifferences=false"
{{- end }}
---
